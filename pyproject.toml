[project]
name = "personal-finance-app"
version = "0.1.0"
description = "Personalized Finance Tracker with Data & AI-Powered Insights"
authors = [
    { name="Christon Ragavan" }
]
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "fastapi==0.115.0",
    "uvicorn[standard]==0.30.1",
    "jinja2==3.1.4",
    "sqlalchemy==2.0.31",
    "psycopg2-binary==2.9.9",
    "python-dotenv==1.0.1",
    "ruff==0.12.0"
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["backend", "frontend"]

[tool.ruff]
exclude = [
    # VCS & environments
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "venv",
    "site-packages",

    # Build outputs
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",

    # Docker-related
    "Dockerfile",
    "docker-compose.yml",
    "**/Dockerfile",
    "**/docker-compose*.yml",
    "**/docker",
    "**/nginx.conf",

    # Migrations & generated files
    "**/migrations",
    "**/alembic",
    "**/alembic.ini",

    # Frontend build
    "frontend/node_modules",
    "frontend/dist",
    "frontend/build",

    # Temp & OS-specific
    "*.log",
    "*.tmp",
    "*.cache",
    ".DS_Store",
]
line-length = 120
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
# EXTREMELY strict rule selection
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "C90", # mccabe complexity
    "N",   # pep8-naming
    "D",   # pydocstyle (docstring rules)
    "ANN", # flake8-annotations (type hints)
    "TID", # flake8-tidy-imports
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint error
    "PLW", # pylint warning
    "PT",  # flake8-pytest-style
    "RUF", # ruff-specific rules
    "Q",   # flake8-quotes
    "TYP", # flake8-type-checking
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "DTZ", # flake8-datetimez
    "ERA", # eradicate (remove commented-out code)
    "PD",  # pandas-vet
    "PL",  # pylint
    "PTH", # flake8-use-pathlib
    "S",   # flake8-bandit (security)
    "TRY", # tryceratops (better exception handling)
]

ignore = ["D415"]

# Allow fix for all enabled rules
fixable = ["ALL"]
unfixable = []



# Docstring style settings
[tool.ruff.lint.pydocstyle]
convention = "google" # or "numpy" if preferred

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
